use axiom axioms

theorem add_assoc: a + (b + c) = (a + b) + c {
    prop P(a): a + (b + c) = (a + b) + c
    theorem P(0) {}
    theorem P(inc(a)) {apply }
}

theorem add_comm: a + b = b + a {

}

theorem sub_expand: a - (b)

theorem gcd_zero: gcd(a,0) = a {
    theorem a_div_a: a | a {
        divide_def.sub({a:a, b:a, c:inc(0)})
    }
    theorem a_div_a: a | 0 {
        divide_def.sub({a:a, b:0, c:0})
    }

}

theorem gcd_sub: gcd(a,b) = gcd(a,a-b) {
    
}